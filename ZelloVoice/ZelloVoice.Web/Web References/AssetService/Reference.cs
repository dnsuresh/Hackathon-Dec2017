//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ZelloVoice.Web.AssetService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AssetWSSoap", Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class AssetWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpeedingConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSpeedingConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoppedConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetStoppedConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMileageAndRuntimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrackerSensoryDiscreteInputsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAssetOrganizationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadUninstalledAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapDevicesInAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDimListIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AssetWS() {
            this.Url = global::ZelloVoice.Web.Properties.Settings.Default.ZelloVoice_Web_AssetService_AssetWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ModifyCompletedEventHandler ModifyCompleted;
        
        /// <remarks/>
        public event RenameCompletedEventHandler RenameCompleted;
        
        /// <remarks/>
        public event GetAssetsCompletedEventHandler GetAssetsCompleted;
        
        /// <remarks/>
        public event GetAssetNamesCompletedEventHandler GetAssetNamesCompleted;
        
        /// <remarks/>
        public event GetGeneralConfigurationCompletedEventHandler GetGeneralConfigurationCompleted;
        
        /// <remarks/>
        public event GetSpeedingConfigurationCompletedEventHandler GetSpeedingConfigurationCompleted;
        
        /// <remarks/>
        public event SetSpeedingConfigurationCompletedEventHandler SetSpeedingConfigurationCompleted;
        
        /// <remarks/>
        public event GetStoppedConfigurationCompletedEventHandler GetStoppedConfigurationCompleted;
        
        /// <remarks/>
        public event SetStoppedConfigurationCompletedEventHandler SetStoppedConfigurationCompleted;
        
        /// <remarks/>
        public event SetMileageAndRuntimeCompletedEventHandler SetMileageAndRuntimeCompleted;
        
        /// <remarks/>
        public event SendTrackerSensoryDiscreteInputsCompletedEventHandler SendTrackerSensoryDiscreteInputsCompleted;
        
        /// <remarks/>
        public event UpdateAssetOrganizationIDCompletedEventHandler UpdateAssetOrganizationIDCompleted;
        
        /// <remarks/>
        public event DownloadUninstalledAssetsCompletedEventHandler DownloadUninstalledAssetsCompleted;
        
        /// <remarks/>
        public event SwapDevicesInAssetsCompletedEventHandler SwapDevicesInAssetsCompleted;
        
        /// <remarks/>
        public event UpdateDimListIdCompletedEventHandler UpdateDimListIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/Modify", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Modify(string SessionID, Asset ExistingAsset) {
            this.Invoke("Modify", new object[] {
                        SessionID,
                        ExistingAsset});
        }
        
        /// <remarks/>
        public void ModifyAsync(string SessionID, Asset ExistingAsset) {
            this.ModifyAsync(SessionID, ExistingAsset, null);
        }
        
        /// <remarks/>
        public void ModifyAsync(string SessionID, Asset ExistingAsset, object userState) {
            if ((this.ModifyOperationCompleted == null)) {
                this.ModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOperationCompleted);
            }
            this.InvokeAsync("Modify", new object[] {
                        SessionID,
                        ExistingAsset}, this.ModifyOperationCompleted, userState);
        }
        
        private void OnModifyOperationCompleted(object arg) {
            if ((this.ModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/Rename", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AssetStatus[] Rename(string SessionID, [System.Xml.Serialization.XmlArrayItemAttribute("Asset")] IDNamePair[] NewAssetNames) {
            object[] results = this.Invoke("Rename", new object[] {
                        SessionID,
                        NewAssetNames});
            return ((AssetStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void RenameAsync(string SessionID, IDNamePair[] NewAssetNames) {
            this.RenameAsync(SessionID, NewAssetNames, null);
        }
        
        /// <remarks/>
        public void RenameAsync(string SessionID, IDNamePair[] NewAssetNames, object userState) {
            if ((this.RenameOperationCompleted == null)) {
                this.RenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameOperationCompleted);
            }
            this.InvokeAsync("Rename", new object[] {
                        SessionID,
                        NewAssetNames}, this.RenameOperationCompleted, userState);
        }
        
        private void OnRenameOperationCompleted(object arg) {
            if ((this.RenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameCompleted(this, new RenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/GetAssets", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Assets")]
        public Asset[] GetAssets(string SessionID, [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)] long[] AssetIDs) {
            object[] results = this.Invoke("GetAssets", new object[] {
                        SessionID,
                        AssetIDs});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetsAsync(string SessionID, long[] AssetIDs) {
            this.GetAssetsAsync(SessionID, AssetIDs, null);
        }
        
        /// <remarks/>
        public void GetAssetsAsync(string SessionID, long[] AssetIDs, object userState) {
            if ((this.GetAssetsOperationCompleted == null)) {
                this.GetAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetsOperationCompleted);
            }
            this.InvokeAsync("GetAssets", new object[] {
                        SessionID,
                        AssetIDs}, this.GetAssetsOperationCompleted, userState);
        }
        
        private void OnGetAssetsOperationCompleted(object arg) {
            if ((this.GetAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetsCompleted(this, new GetAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/GetAssetNames", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("AssetNames")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Asset")]
        public IDNamePair[] GetAssetNames(string SessionID, [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)] long[] AssetIDs) {
            object[] results = this.Invoke("GetAssetNames", new object[] {
                        SessionID,
                        AssetIDs});
            return ((IDNamePair[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetNamesAsync(string SessionID, long[] AssetIDs) {
            this.GetAssetNamesAsync(SessionID, AssetIDs, null);
        }
        
        /// <remarks/>
        public void GetAssetNamesAsync(string SessionID, long[] AssetIDs, object userState) {
            if ((this.GetAssetNamesOperationCompleted == null)) {
                this.GetAssetNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetNamesOperationCompleted);
            }
            this.InvokeAsync("GetAssetNames", new object[] {
                        SessionID,
                        AssetIDs}, this.GetAssetNamesOperationCompleted, userState);
        }
        
        private void OnGetAssetNamesOperationCompleted(object arg) {
            if ((this.GetAssetNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetNamesCompleted(this, new GetAssetNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/GetGeneralConfiguration", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeneralDeviceConfiguration[] GetGeneralConfiguration(string SessionID, [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)] long[] AssetIDs) {
            object[] results = this.Invoke("GetGeneralConfiguration", new object[] {
                        SessionID,
                        AssetIDs});
            return ((GeneralDeviceConfiguration[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralConfigurationAsync(string SessionID, long[] AssetIDs) {
            this.GetGeneralConfigurationAsync(SessionID, AssetIDs, null);
        }
        
        /// <remarks/>
        public void GetGeneralConfigurationAsync(string SessionID, long[] AssetIDs, object userState) {
            if ((this.GetGeneralConfigurationOperationCompleted == null)) {
                this.GetGeneralConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetGeneralConfiguration", new object[] {
                        SessionID,
                        AssetIDs}, this.GetGeneralConfigurationOperationCompleted, userState);
        }
        
        private void OnGetGeneralConfigurationOperationCompleted(object arg) {
            if ((this.GetGeneralConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralConfigurationCompleted(this, new GetGeneralConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/GetSpeedingConfiguration", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpeedingConfiguration[] GetSpeedingConfiguration(string SessionID, [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)] long[] AssetIDs) {
            object[] results = this.Invoke("GetSpeedingConfiguration", new object[] {
                        SessionID,
                        AssetIDs});
            return ((SpeedingConfiguration[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpeedingConfigurationAsync(string SessionID, long[] AssetIDs) {
            this.GetSpeedingConfigurationAsync(SessionID, AssetIDs, null);
        }
        
        /// <remarks/>
        public void GetSpeedingConfigurationAsync(string SessionID, long[] AssetIDs, object userState) {
            if ((this.GetSpeedingConfigurationOperationCompleted == null)) {
                this.GetSpeedingConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpeedingConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetSpeedingConfiguration", new object[] {
                        SessionID,
                        AssetIDs}, this.GetSpeedingConfigurationOperationCompleted, userState);
        }
        
        private void OnGetSpeedingConfigurationOperationCompleted(object arg) {
            if ((this.GetSpeedingConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpeedingConfigurationCompleted(this, new GetSpeedingConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/SetSpeedingConfiguration", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AssetStatus[] SetSpeedingConfiguration(string SessionID, SpeedingConfiguration[] SpeedingConfigurations) {
            object[] results = this.Invoke("SetSpeedingConfiguration", new object[] {
                        SessionID,
                        SpeedingConfigurations});
            return ((AssetStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void SetSpeedingConfigurationAsync(string SessionID, SpeedingConfiguration[] SpeedingConfigurations) {
            this.SetSpeedingConfigurationAsync(SessionID, SpeedingConfigurations, null);
        }
        
        /// <remarks/>
        public void SetSpeedingConfigurationAsync(string SessionID, SpeedingConfiguration[] SpeedingConfigurations, object userState) {
            if ((this.SetSpeedingConfigurationOperationCompleted == null)) {
                this.SetSpeedingConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSpeedingConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetSpeedingConfiguration", new object[] {
                        SessionID,
                        SpeedingConfigurations}, this.SetSpeedingConfigurationOperationCompleted, userState);
        }
        
        private void OnSetSpeedingConfigurationOperationCompleted(object arg) {
            if ((this.SetSpeedingConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSpeedingConfigurationCompleted(this, new SetSpeedingConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/GetStoppedConfiguration", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoppedConfiguration[] GetStoppedConfiguration(string SessionID, [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)] long[] AssetIDs) {
            object[] results = this.Invoke("GetStoppedConfiguration", new object[] {
                        SessionID,
                        AssetIDs});
            return ((StoppedConfiguration[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStoppedConfigurationAsync(string SessionID, long[] AssetIDs) {
            this.GetStoppedConfigurationAsync(SessionID, AssetIDs, null);
        }
        
        /// <remarks/>
        public void GetStoppedConfigurationAsync(string SessionID, long[] AssetIDs, object userState) {
            if ((this.GetStoppedConfigurationOperationCompleted == null)) {
                this.GetStoppedConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoppedConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetStoppedConfiguration", new object[] {
                        SessionID,
                        AssetIDs}, this.GetStoppedConfigurationOperationCompleted, userState);
        }
        
        private void OnGetStoppedConfigurationOperationCompleted(object arg) {
            if ((this.GetStoppedConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoppedConfigurationCompleted(this, new GetStoppedConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/SetStoppedConfiguration", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AssetStatus[] SetStoppedConfiguration(string SessionID, StoppedConfiguration[] StoppedConfigurations) {
            object[] results = this.Invoke("SetStoppedConfiguration", new object[] {
                        SessionID,
                        StoppedConfigurations});
            return ((AssetStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void SetStoppedConfigurationAsync(string SessionID, StoppedConfiguration[] StoppedConfigurations) {
            this.SetStoppedConfigurationAsync(SessionID, StoppedConfigurations, null);
        }
        
        /// <remarks/>
        public void SetStoppedConfigurationAsync(string SessionID, StoppedConfiguration[] StoppedConfigurations, object userState) {
            if ((this.SetStoppedConfigurationOperationCompleted == null)) {
                this.SetStoppedConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetStoppedConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetStoppedConfiguration", new object[] {
                        SessionID,
                        StoppedConfigurations}, this.SetStoppedConfigurationOperationCompleted, userState);
        }
        
        private void OnSetStoppedConfigurationOperationCompleted(object arg) {
            if ((this.SetStoppedConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetStoppedConfigurationCompleted(this, new SetStoppedConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/SetMileageAndRuntime", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AssetStatus[] SetMileageAndRuntime(string SessionID, MileageAndRuntimeConfiguration[] MileageAndRuntimeConfigurations) {
            object[] results = this.Invoke("SetMileageAndRuntime", new object[] {
                        SessionID,
                        MileageAndRuntimeConfigurations});
            return ((AssetStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void SetMileageAndRuntimeAsync(string SessionID, MileageAndRuntimeConfiguration[] MileageAndRuntimeConfigurations) {
            this.SetMileageAndRuntimeAsync(SessionID, MileageAndRuntimeConfigurations, null);
        }
        
        /// <remarks/>
        public void SetMileageAndRuntimeAsync(string SessionID, MileageAndRuntimeConfiguration[] MileageAndRuntimeConfigurations, object userState) {
            if ((this.SetMileageAndRuntimeOperationCompleted == null)) {
                this.SetMileageAndRuntimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMileageAndRuntimeOperationCompleted);
            }
            this.InvokeAsync("SetMileageAndRuntime", new object[] {
                        SessionID,
                        MileageAndRuntimeConfigurations}, this.SetMileageAndRuntimeOperationCompleted, userState);
        }
        
        private void OnSetMileageAndRuntimeOperationCompleted(object arg) {
            if ((this.SetMileageAndRuntimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMileageAndRuntimeCompleted(this, new SetMileageAndRuntimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/SendTrackerSensoryDiscreteInputs", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AssetStatus[] SendTrackerSensoryDiscreteInputs(string SessionID, long[] AssetID, DeviceInputs DeviceInputs) {
            object[] results = this.Invoke("SendTrackerSensoryDiscreteInputs", new object[] {
                        SessionID,
                        AssetID,
                        DeviceInputs});
            return ((AssetStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void SendTrackerSensoryDiscreteInputsAsync(string SessionID, long[] AssetID, DeviceInputs DeviceInputs) {
            this.SendTrackerSensoryDiscreteInputsAsync(SessionID, AssetID, DeviceInputs, null);
        }
        
        /// <remarks/>
        public void SendTrackerSensoryDiscreteInputsAsync(string SessionID, long[] AssetID, DeviceInputs DeviceInputs, object userState) {
            if ((this.SendTrackerSensoryDiscreteInputsOperationCompleted == null)) {
                this.SendTrackerSensoryDiscreteInputsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrackerSensoryDiscreteInputsOperationCompleted);
            }
            this.InvokeAsync("SendTrackerSensoryDiscreteInputs", new object[] {
                        SessionID,
                        AssetID,
                        DeviceInputs}, this.SendTrackerSensoryDiscreteInputsOperationCompleted, userState);
        }
        
        private void OnSendTrackerSensoryDiscreteInputsOperationCompleted(object arg) {
            if ((this.SendTrackerSensoryDiscreteInputsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrackerSensoryDiscreteInputsCompleted(this, new SendTrackerSensoryDiscreteInputsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/UpdateAssetOrganizationID", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AssetStatus[] UpdateAssetOrganizationID(string SessionID, long[] AssetID, long OrganizationID) {
            object[] results = this.Invoke("UpdateAssetOrganizationID", new object[] {
                        SessionID,
                        AssetID,
                        OrganizationID});
            return ((AssetStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAssetOrganizationIDAsync(string SessionID, long[] AssetID, long OrganizationID) {
            this.UpdateAssetOrganizationIDAsync(SessionID, AssetID, OrganizationID, null);
        }
        
        /// <remarks/>
        public void UpdateAssetOrganizationIDAsync(string SessionID, long[] AssetID, long OrganizationID, object userState) {
            if ((this.UpdateAssetOrganizationIDOperationCompleted == null)) {
                this.UpdateAssetOrganizationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAssetOrganizationIDOperationCompleted);
            }
            this.InvokeAsync("UpdateAssetOrganizationID", new object[] {
                        SessionID,
                        AssetID,
                        OrganizationID}, this.UpdateAssetOrganizationIDOperationCompleted, userState);
        }
        
        private void OnUpdateAssetOrganizationIDOperationCompleted(object arg) {
            if ((this.UpdateAssetOrganizationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAssetOrganizationIDCompleted(this, new UpdateAssetOrganizationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/DownloadUninstalledAssets", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Assets")]
        public Asset[] DownloadUninstalledAssets(string SessionID) {
            object[] results = this.Invoke("DownloadUninstalledAssets", new object[] {
                        SessionID});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadUninstalledAssetsAsync(string SessionID) {
            this.DownloadUninstalledAssetsAsync(SessionID, null);
        }
        
        /// <remarks/>
        public void DownloadUninstalledAssetsAsync(string SessionID, object userState) {
            if ((this.DownloadUninstalledAssetsOperationCompleted == null)) {
                this.DownloadUninstalledAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadUninstalledAssetsOperationCompleted);
            }
            this.InvokeAsync("DownloadUninstalledAssets", new object[] {
                        SessionID}, this.DownloadUninstalledAssetsOperationCompleted, userState);
        }
        
        private void OnDownloadUninstalledAssetsOperationCompleted(object arg) {
            if ((this.DownloadUninstalledAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadUninstalledAssetsCompleted(this, new DownloadUninstalledAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/SwapDevicesInAssets", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Asset[] SwapDevicesInAssets(string SessionID, long AssetID1, long AssetID2) {
            object[] results = this.Invoke("SwapDevicesInAssets", new object[] {
                        SessionID,
                        AssetID1,
                        AssetID2});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void SwapDevicesInAssetsAsync(string SessionID, long AssetID1, long AssetID2) {
            this.SwapDevicesInAssetsAsync(SessionID, AssetID1, AssetID2, null);
        }
        
        /// <remarks/>
        public void SwapDevicesInAssetsAsync(string SessionID, long AssetID1, long AssetID2, object userState) {
            if ((this.SwapDevicesInAssetsOperationCompleted == null)) {
                this.SwapDevicesInAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapDevicesInAssetsOperationCompleted);
            }
            this.InvokeAsync("SwapDevicesInAssets", new object[] {
                        SessionID,
                        AssetID1,
                        AssetID2}, this.SwapDevicesInAssetsOperationCompleted, userState);
        }
        
        private void OnSwapDevicesInAssetsOperationCompleted(object arg) {
            if ((this.SwapDevicesInAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapDevicesInAssetsCompleted(this, new SwapDevicesInAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://telvisant.trimble.com/WebServices/Asset/UpdateDimListId", RequestNamespace="http://telvisant.trimble.com/WebServices/Asset/", ResponseNamespace="http://telvisant.trimble.com/WebServices/Asset/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] UpdateDimListId(string sessionId, long[] assetId, long dimListId) {
            object[] results = this.Invoke("UpdateDimListId", new object[] {
                        sessionId,
                        assetId,
                        dimListId});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDimListIdAsync(string sessionId, long[] assetId, long dimListId) {
            this.UpdateDimListIdAsync(sessionId, assetId, dimListId, null);
        }
        
        /// <remarks/>
        public void UpdateDimListIdAsync(string sessionId, long[] assetId, long dimListId, object userState) {
            if ((this.UpdateDimListIdOperationCompleted == null)) {
                this.UpdateDimListIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDimListIdOperationCompleted);
            }
            this.InvokeAsync("UpdateDimListId", new object[] {
                        sessionId,
                        assetId,
                        dimListId}, this.UpdateDimListIdOperationCompleted, userState);
        }
        
        private void OnUpdateDimListIdOperationCompleted(object arg) {
            if ((this.UpdateDimListIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDimListIdCompleted(this, new UpdateDimListIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class Asset {
        
        private long assetIDField;
        
        private string nameField;
        
        private long assetTypeIDField;
        
        private long deviceIDField;
        
        private long assetOrganizationIDField;
        
        private long mapColorField;
        
        private long mapIconField;
        
        private long displayTypeIDField;
        
        private string displayTypeDescField;
        
        private long dIMListIDField;
        
        private long vehicleAttributeProfileIDField;
        
        private string messageProtocolField;
        
        private string pDTVersionField;
        
        private string vINField;
        
        private long logicTypeIDField;
        
        private long displayOSTypeIDField;
        
        private string displayOSTypeDescField;
        
        /// <remarks/>
        public long AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public long AssetTypeID {
            get {
                return this.assetTypeIDField;
            }
            set {
                this.assetTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public long DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public long AssetOrganizationID {
            get {
                return this.assetOrganizationIDField;
            }
            set {
                this.assetOrganizationIDField = value;
            }
        }
        
        /// <remarks/>
        public long MapColor {
            get {
                return this.mapColorField;
            }
            set {
                this.mapColorField = value;
            }
        }
        
        /// <remarks/>
        public long MapIcon {
            get {
                return this.mapIconField;
            }
            set {
                this.mapIconField = value;
            }
        }
        
        /// <remarks/>
        public long DisplayTypeID {
            get {
                return this.displayTypeIDField;
            }
            set {
                this.displayTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayTypeDesc {
            get {
                return this.displayTypeDescField;
            }
            set {
                this.displayTypeDescField = value;
            }
        }
        
        /// <remarks/>
        public long DIMListID {
            get {
                return this.dIMListIDField;
            }
            set {
                this.dIMListIDField = value;
            }
        }
        
        /// <remarks/>
        public long VehicleAttributeProfileID {
            get {
                return this.vehicleAttributeProfileIDField;
            }
            set {
                this.vehicleAttributeProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public string MessageProtocol {
            get {
                return this.messageProtocolField;
            }
            set {
                this.messageProtocolField = value;
            }
        }
        
        /// <remarks/>
        public string PDTVersion {
            get {
                return this.pDTVersionField;
            }
            set {
                this.pDTVersionField = value;
            }
        }
        
        /// <remarks/>
        public string VIN {
            get {
                return this.vINField;
            }
            set {
                this.vINField = value;
            }
        }
        
        /// <remarks/>
        public long LogicTypeID {
            get {
                return this.logicTypeIDField;
            }
            set {
                this.logicTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public long DisplayOSTypeID {
            get {
                return this.displayOSTypeIDField;
            }
            set {
                this.displayOSTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayOSTypeDesc {
            get {
                return this.displayOSTypeDescField;
            }
            set {
                this.displayOSTypeDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class Input {
        
        private short hysteresisField;
        
        private bool enabledField;
        
        private bool positivePolarityField;
        
        private bool ignitionRequiredField;
        
        private string onDescField;
        
        private string offDescField;
        
        private string monitoredItemDescField;
        
        private DiscreteInput discreteInputField;
        
        private AlertState alertStateField;
        
        /// <remarks/>
        public short Hysteresis {
            get {
                return this.hysteresisField;
            }
            set {
                this.hysteresisField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public bool PositivePolarity {
            get {
                return this.positivePolarityField;
            }
            set {
                this.positivePolarityField = value;
            }
        }
        
        /// <remarks/>
        public bool IgnitionRequired {
            get {
                return this.ignitionRequiredField;
            }
            set {
                this.ignitionRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string OnDesc {
            get {
                return this.onDescField;
            }
            set {
                this.onDescField = value;
            }
        }
        
        /// <remarks/>
        public string OffDesc {
            get {
                return this.offDescField;
            }
            set {
                this.offDescField = value;
            }
        }
        
        /// <remarks/>
        public string MonitoredItemDesc {
            get {
                return this.monitoredItemDescField;
            }
            set {
                this.monitoredItemDescField = value;
            }
        }
        
        /// <remarks/>
        public DiscreteInput DiscreteInput {
            get {
                return this.discreteInputField;
            }
            set {
                this.discreteInputField = value;
            }
        }
        
        /// <remarks/>
        public AlertState AlertState {
            get {
                return this.alertStateField;
            }
            set {
                this.alertStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public enum DiscreteInput {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Input1,
        
        /// <remarks/>
        Input2,
        
        /// <remarks/>
        Input3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public enum AlertState {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Any,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class DeviceInputs {
        
        private Input input1Field;
        
        private Input input2Field;
        
        private Input input3Field;
        
        /// <remarks/>
        public Input Input1 {
            get {
                return this.input1Field;
            }
            set {
                this.input1Field = value;
            }
        }
        
        /// <remarks/>
        public Input Input2 {
            get {
                return this.input2Field;
            }
            set {
                this.input2Field = value;
            }
        }
        
        /// <remarks/>
        public Input Input3 {
            get {
                return this.input3Field;
            }
            set {
                this.input3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class MileageAndRuntimeConfiguration {
        
        private long assetIDField;
        
        private double mileageField;
        
        private long runtimeField;
        
        /// <remarks/>
        public long AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public double Mileage {
            get {
                return this.mileageField;
            }
            set {
                this.mileageField = value;
            }
        }
        
        /// <remarks/>
        public long Runtime {
            get {
                return this.runtimeField;
            }
            set {
                this.runtimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class StoppedConfiguration {
        
        private long assetIDField;
        
        private bool enabledField;
        
        private double thresholdField;
        
        private long durationField;
        
        /// <remarks/>
        public long AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public double Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        public long Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class SpeedingConfiguration {
        
        private long assetIDField;
        
        private bool enabledField;
        
        private double thresholdField;
        
        private long durationField;
        
        /// <remarks/>
        public long AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public double Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        public long Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class GeneralDeviceConfiguration {
        
        private long assetIDField;
        
        private int deviceLogicTypeField;
        
        /// <remarks/>
        public long AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public int DeviceLogicType {
            get {
                return this.deviceLogicTypeField;
            }
            set {
                this.deviceLogicTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class AssetStatus {
        
        private long assetIDField;
        
        private AssetStatusCodes statusField;
        
        /// <remarks/>
        public long AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public AssetStatusCodes Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public enum AssetStatusCodes {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        DbAccessError,
        
        /// <remarks/>
        InvalidSiteId,
        
        /// <remarks/>
        InvalidAssetId,
        
        /// <remarks/>
        UnknownMessage,
        
        /// <remarks/>
        MessageTooLong,
        
        /// <remarks/>
        TooManyResponses,
        
        /// <remarks/>
        ResponseTooLong,
        
        /// <remarks/>
        NoDevice,
        
        /// <remarks/>
        NoDisplay,
        
        /// <remarks/>
        NoSubject,
        
        /// <remarks/>
        InvalidLocationID,
        
        /// <remarks/>
        AccessDenied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://telvisant.trimble.com/WebServices/Asset/")]
    public partial class IDNamePair {
        
        private long idField;
        
        private string nameField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ModifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void RenameCompletedEventHandler(object sender, RenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetAssetsCompletedEventHandler(object sender, GetAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetAssetNamesCompletedEventHandler(object sender, GetAssetNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IDNamePair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IDNamePair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetGeneralConfigurationCompletedEventHandler(object sender, GetGeneralConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeneralDeviceConfiguration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeneralDeviceConfiguration[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetSpeedingConfigurationCompletedEventHandler(object sender, GetSpeedingConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpeedingConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpeedingConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpeedingConfiguration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpeedingConfiguration[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SetSpeedingConfigurationCompletedEventHandler(object sender, SetSpeedingConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSpeedingConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSpeedingConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetStoppedConfigurationCompletedEventHandler(object sender, GetStoppedConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoppedConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoppedConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoppedConfiguration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoppedConfiguration[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SetStoppedConfigurationCompletedEventHandler(object sender, SetStoppedConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetStoppedConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetStoppedConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SetMileageAndRuntimeCompletedEventHandler(object sender, SetMileageAndRuntimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMileageAndRuntimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMileageAndRuntimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendTrackerSensoryDiscreteInputsCompletedEventHandler(object sender, SendTrackerSensoryDiscreteInputsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrackerSensoryDiscreteInputsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrackerSensoryDiscreteInputsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UpdateAssetOrganizationIDCompletedEventHandler(object sender, UpdateAssetOrganizationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAssetOrganizationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAssetOrganizationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void DownloadUninstalledAssetsCompletedEventHandler(object sender, DownloadUninstalledAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadUninstalledAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadUninstalledAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SwapDevicesInAssetsCompletedEventHandler(object sender, SwapDevicesInAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapDevicesInAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapDevicesInAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UpdateDimListIdCompletedEventHandler(object sender, UpdateDimListIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDimListIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDimListIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591