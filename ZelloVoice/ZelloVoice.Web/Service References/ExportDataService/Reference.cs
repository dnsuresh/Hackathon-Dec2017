//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZelloVoice.Web.ExportDataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.Platform.CommonLibrary.Objects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trimble.MobileSolutions.Business.Entities.Events.Data.ExportPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ZelloVoice.Web.ExportDataService.EventBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent))]
    public partial class ExportBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ZelloVoice.Web.ExportDataService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeGMTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ZelloVoice.Web.ExportDataService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((this.HeadingField.Equals(value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeGMT {
            get {
                return this.TimeGMTField;
            }
            set {
                if ((this.TimeGMTField.Equals(value) != true)) {
                    this.TimeGMTField = value;
                    this.RaisePropertyChanged("TimeGMT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Trimble.Platform.CommonLibrary.Objects")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.Platform.CommonLibrary.Objects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent))]
    public partial class EventBase : ZelloVoice.Web.ExportDataService.ExportBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoGeneratedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DIMListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoGenerated {
            get {
                return this.AutoGeneratedField;
            }
            set {
                if ((this.AutoGeneratedField.Equals(value) != true)) {
                    this.AutoGeneratedField = value;
                    this.RaisePropertyChanged("AutoGenerated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DIMListID {
            get {
                return this.DIMListIDField;
            }
            set {
                if ((this.DIMListIDField.Equals(value) != true)) {
                    this.DIMListIDField = value;
                    this.RaisePropertyChanged("DIMListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortData {
            get {
                return this.PortDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PortDataField, value) != true)) {
                    this.PortDataField = value;
                    this.RaisePropertyChanged("PortData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EventParameterCollection", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Business.Entities" +
        ".Events", ItemName="anyType")]
    [System.SerializableAttribute()]
    public class EventParameterCollection : System.Collections.Generic.List<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ZelloVoice.Web.ExportDataService.DatabaseFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ZelloVoice.Web.ExportDataService.UnknownFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ZelloVoice.Web.ExportDataService.MissingCapabilityFault))]
    public partial class FaultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
    [System.SerializableAttribute()]
    public partial class DatabaseFault : ZelloVoice.Web.ExportDataService.FaultBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnknownFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
    [System.SerializableAttribute()]
    public partial class UnknownFault : ZelloVoice.Web.ExportDataService.FaultBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MissingCapabilityFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
    [System.SerializableAttribute()]
    public partial class MissingCapabilityFault : ZelloVoice.Web.ExportDataService.FaultBase {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExportDataService.IExportDataMapper")]
    public interface IExportDataMapper {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportEvents", ReplyAction="http://tempuri.org/IExportDataMapper/ExportEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.MissingCapabilityFault), Action="http://tempuri.org/IExportDataMapper/ExportEventsMissingCapabilityFaultFault", Name="MissingCapabilityFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.DatabaseFault), Action="http://tempuri.org/IExportDataMapper/ExportEventsDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.UnknownFault), Action="http://tempuri.org/IExportDataMapper/ExportEventsUnknownFaultFault", Name="UnknownFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.FaultBase), Action="http://tempuri.org/IExportDataMapper/ExportEventsFaultBaseFault", Name="FaultBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[] ExportEvents(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportEvents", ReplyAction="http://tempuri.org/IExportDataMapper/ExportEventsResponse")]
        System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[]> ExportEventsAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportPortData", ReplyAction="http://tempuri.org/IExportDataMapper/ExportPortDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.MissingCapabilityFault), Action="http://tempuri.org/IExportDataMapper/ExportPortDataMissingCapabilityFaultFault", Name="MissingCapabilityFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.DatabaseFault), Action="http://tempuri.org/IExportDataMapper/ExportPortDataDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.UnknownFault), Action="http://tempuri.org/IExportDataMapper/ExportPortDataUnknownFaultFault", Name="UnknownFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.FaultBase), Action="http://tempuri.org/IExportDataMapper/ExportPortDataFaultBaseFault", Name="FaultBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[] ExportPortData(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList, long[] portList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportPortData", ReplyAction="http://tempuri.org/IExportDataMapper/ExportPortDataResponse")]
        System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[]> ExportPortDataAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList, long[] portList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportAllData", ReplyAction="http://tempuri.org/IExportDataMapper/ExportAllDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.MissingCapabilityFault), Action="http://tempuri.org/IExportDataMapper/ExportAllDataMissingCapabilityFaultFault", Name="MissingCapabilityFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.DatabaseFault), Action="http://tempuri.org/IExportDataMapper/ExportAllDataDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.UnknownFault), Action="http://tempuri.org/IExportDataMapper/ExportAllDataUnknownFaultFault", Name="UnknownFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.FaultBase), Action="http://tempuri.org/IExportDataMapper/ExportAllDataFaultBaseFault", Name="FaultBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[] ExportAllData(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportAllData", ReplyAction="http://tempuri.org/IExportDataMapper/ExportAllDataResponse")]
        System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[]> ExportAllDataAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportPositions", ReplyAction="http://tempuri.org/IExportDataMapper/ExportPositionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.MissingCapabilityFault), Action="http://tempuri.org/IExportDataMapper/ExportPositionsMissingCapabilityFaultFault", Name="MissingCapabilityFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.DatabaseFault), Action="http://tempuri.org/IExportDataMapper/ExportPositionsDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.UnknownFault), Action="http://tempuri.org/IExportDataMapper/ExportPositionsUnknownFaultFault", Name="UnknownFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.FaultBase), Action="http://tempuri.org/IExportDataMapper/ExportPositionsFaultBaseFault", Name="FaultBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        Trimble.MobileSolutions.Business.Entities.Events.Data.ExportPosition[] ExportPositions(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportPositions", ReplyAction="http://tempuri.org/IExportDataMapper/ExportPositionsResponse")]
        System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportPosition[]> ExportPositionsAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportDriverStatusEvents", ReplyAction="http://tempuri.org/IExportDataMapper/ExportDriverStatusEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.MissingCapabilityFault), Action="http://tempuri.org/IExportDataMapper/ExportDriverStatusEventsMissingCapabilityFau" +
            "ltFault", Name="MissingCapabilityFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.DatabaseFault), Action="http://tempuri.org/IExportDataMapper/ExportDriverStatusEventsDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.UnknownFault), Action="http://tempuri.org/IExportDataMapper/ExportDriverStatusEventsUnknownFaultFault", Name="UnknownFault", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(ZelloVoice.Web.ExportDataService.FaultBase), Action="http://tempuri.org/IExportDataMapper/ExportDriverStatusEventsFaultBaseFault", Name="FaultBase", Namespace="http://schemas.datacontract.org/2004/07/Trimble.MobileSolutions.Utility.Faults")]
        Trimble.MobileSolutions.Business.Entities.Events.Data.DriverStatusEvent[] ExportDriverStatusEvents(string sessionId, long[] driverList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportDataMapper/ExportDriverStatusEvents", ReplyAction="http://tempuri.org/IExportDataMapper/ExportDriverStatusEventsResponse")]
        System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.DriverStatusEvent[]> ExportDriverStatusEventsAsync(string sessionId, long[] driverList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExportDataMapperChannel : ZelloVoice.Web.ExportDataService.IExportDataMapper, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportDataMapperClient : System.ServiceModel.ClientBase<ZelloVoice.Web.ExportDataService.IExportDataMapper>, ZelloVoice.Web.ExportDataService.IExportDataMapper {
        
        public ExportDataMapperClient() {
        }
        
        public ExportDataMapperClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExportDataMapperClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportDataMapperClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportDataMapperClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[] ExportEvents(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList) {
            return base.Channel.ExportEvents(sessionId, startDateTimeGmt, endDateTimeGmt, assetList);
        }
        
        public System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[]> ExportEventsAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList) {
            return base.Channel.ExportEventsAsync(sessionId, startDateTimeGmt, endDateTimeGmt, assetList);
        }
        
        public Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[] ExportPortData(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList, long[] portList) {
            return base.Channel.ExportPortData(sessionId, startDateTimeGmt, endDateTimeGmt, assetList, portList);
        }
        
        public System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[]> ExportPortDataAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList, long[] portList) {
            return base.Channel.ExportPortDataAsync(sessionId, startDateTimeGmt, endDateTimeGmt, assetList, portList);
        }
        
        public Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[] ExportAllData(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList) {
            return base.Channel.ExportAllData(sessionId, startDateTimeGmt, endDateTimeGmt, assetList);
        }
        
        public System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportEvent[]> ExportAllDataAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList) {
            return base.Channel.ExportAllDataAsync(sessionId, startDateTimeGmt, endDateTimeGmt, assetList);
        }
        
        public Trimble.MobileSolutions.Business.Entities.Events.Data.ExportPosition[] ExportPositions(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList) {
            return base.Channel.ExportPositions(sessionId, startDateTimeGmt, endDateTimeGmt, assetList);
        }
        
        public System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.ExportPosition[]> ExportPositionsAsync(string sessionId, System.DateTime startDateTimeGmt, System.DateTime endDateTimeGmt, long[] assetList) {
            return base.Channel.ExportPositionsAsync(sessionId, startDateTimeGmt, endDateTimeGmt, assetList);
        }
        
        public Trimble.MobileSolutions.Business.Entities.Events.Data.DriverStatusEvent[] ExportDriverStatusEvents(string sessionId, long[] driverList) {
            return base.Channel.ExportDriverStatusEvents(sessionId, driverList);
        }
        
        public System.Threading.Tasks.Task<Trimble.MobileSolutions.Business.Entities.Events.Data.DriverStatusEvent[]> ExportDriverStatusEventsAsync(string sessionId, long[] driverList) {
            return base.Channel.ExportDriverStatusEventsAsync(sessionId, driverList);
        }
    }
}
